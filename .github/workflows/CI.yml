name: CI

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    name: Build & test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout subrepos
      if: "!startsWith(matrix.os, 'windows')"
      run: ./update_repository.sh

    - name: Checkout subrepos
      if: "startsWith(matrix.os, 'windows')"
      shell: cmd
      run: update_repository.bat

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Windows - setup MSBuild
      if: startsWith(matrix.os, 'windows')
      uses: microsoft/setup-msbuild@v1.1

    - name: Windows - building main installer
      if: startsWith(matrix.os, 'windows')
      shell: cmd
      run: |
        %Qt5_DIR%\bin\qmake.exe -v
        dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC"
        set QTDIR64=%Qt5_DIR%
        cd installer
        create_installer.bat
        cd ..\

    - name: Archive DMG
      if: startsWith(matrix.os, 'macos')
      uses: actions/upload-artifact@v2
      with:
          name: ShaderPlayground.dmg
          path: ShaderPlayground.dmg

    - name: Archive AppImage
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v2
      with:
          name: ShaderPlayground.AppImage
          path: ShaderPlayground.AppImage

    - name: Archive Installer
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v2
      with:
          name: ShaderPlayground.exe
          path: installer/ShaderPlayground.exe
